
server {
    listen 80;
    server_name _;
    
    # Redirect to HTTPS if certificates exist
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
    
    # For Let's Encrypt certificate validation
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

# HTTPS server - uncomment after generating certificates
# server {
#     listen 443 ssl http2;
#     server_name _;
#     
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#     
#     # SSL settings
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     ssl_session_tickets off;
#     
#     # HSTS (optional)
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Compression
#     gzip on;
#     gzip_min_length 1000;
#     gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml text/javascript;
#     
#     # Client assets caching
#     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
#         root /usr/share/nginx/html;
#         expires 30d;
#         add_header Cache-Control "public, max-age=2592000";
#     }
#     
#     # Handle SPA routing
#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#         try_files $uri $uri/ /index.html;
#     }
#     
#     # Forward API requests to the backend service
#     location /api/ {
#         proxy_pass http://api:3000/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }
